openapi: 3.1.0
info:
  title: MedlAI
  description: Endpoint Documentation
  version: 1.0.0
servers:
  - url: 'https'
paths:
  /appointment/add:
    get:
      summary: "GET appointment/add"
      operationId: "add"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
    post:
      summary: "POST appointment/add"
      operationId: "add"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /appointment/update/{id}:
    get:
      summary: "GET appointment/update/{id}"
      operationId: "update"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
    post:
      summary: "POST appointment/update/{id}"
      operationId: "update"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /appointment/delete:
    post:
      summary: "POST appointment/delete"
      operationId: "deleteAppointment"
      parameters:
        - name: "id"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /send-email:
    get:
      summary: "GET send-email"
      operationId: "sendEmail"
      responses:
        "200":
          description: "OK"
  /home:
    get:
      summary: "GET home"
      operationId: "home"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /:
    get:
      summary: "GET "
      operationId: "home"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /admin/doctors/{doctorId}/absence:
    post:
      summary: "POST admin/doctors/{doctorId}/absence"
      operationId: "setDoctorAbsence"
      parameters:
        - name: "doctorId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Absence"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /admin/doctors:
    post:
      summary: "POST admin/doctors"
      operationId: "addDoctor"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Doctor"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /admin/doctors/{id}:
    put:
      summary: "PUT admin/doctors/{id}"
      operationId: "updateDoctor"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Doctor"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
    delete:
      summary: "DELETE admin/doctors/{id}"
      operationId: "deleteDoctor"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /admin/appointments/{appointmentId}/status:
    put:
      summary: "PUT admin/appointments/{appointmentId}/status"
      operationId: "updateAppointmentStatus"
      parameters:
        - name: "appointmentId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
        - name: "newStatus"
          in: "query"
          required: true
          schema:
            type: "string"
            enum:
              - "SCHEDULED"
              - "COMPLETED"
              - "CANCELLED"
              - "TO_BE_CONFIRMED"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
components:
  schemas:
    Appointment:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        start_date:
          type: "string"
          format: "date-time"
        end_date:
          type: "string"
          format: "date-time"
        patient_first_name:
          type: "string"
        patient_last_name:
          type: "string"
        patient_email:
          type: "string"
        patient_phone:
          type: "string"
        patient_encrypted_pesel:
          type: "string"
        doctor:
          $ref: "#/components/schemas/Doctor"
        status:
          type: "string"
          enum:
            - "SCHEDULED"
            - "COMPLETED"
            - "CANCELLED"
            - "TO_BE_CONFIRMED"
    Schedule:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        day_of_week:
          type: "string"
          enum:
            - "MONDAY"
            - "TUESDAY"
            - "WEDNESDAY"
            - "THURSDAY"
            - "FRIDAY"
            - "SATURDAY"
            - "SUNDAY"
        start_time:
          type: "string"
          format: "partial-time"
        end_time:
          type: "string"
          format: "partial-time"
        valid_to:
          type: "string"
          format: "date"
        doctor:
          $ref: "#/components/schemas/Doctor"
    Doctor:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        first_name:
          type: "string"
        last_name:
          type: "string"
        email:
          type: "string"
        phone:
          type: "string"
        specialization:
          type: "string"
          enum:
            - "GENERAL"
            - "CARDIOLOGIST"
            - "NEUROLOGIST"
            - "DERMATOLOGIST"
            - "ONCOLOGIST"
            - "PEDIATRICIAN"
            - "PSYCHIATRIST"
            - "OPHTHALMOLOGIST"
            - "GASTROENTEROLOGIST"
            - "ENDOCRINOLOGIST"
        appointments:
          type: "array"
          items:
            $ref: "#/components/schemas/Appointment"
        schedule:
          type: "array"
          items:
            $ref: "#/components/schemas/Schedule"
        absence:
          type: "array"
          items:
            $ref: "#/components/schemas/Absence"
    Absence:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        start_date:
          type: "string"
          format: "date-time"
        end_date:
          type: "string"
          format: "date-time"
        absence_reason:
          type: "string"
          enum:
            - "Vacation"
            - "L4"
            - "Childcare"
            - "Other"
        doctor:
          $ref: "#/components/schemas/Doctor"

